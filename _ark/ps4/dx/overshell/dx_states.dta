(kState_ChooseDiff 
   (view list_medium) 
   (song_settings_flow TRUE) 
   (shows_extended_mic_arrows TRUE) 
   (enter 
      {$this clear_somp_difficulty } 
      {$this setup_difficulty_list $this } 
      {if 
         {== 
            {
               {$this get_user }get_track_type }kTrackVocals }
         {local $ui_list 
            {$this get_ui_list }}
         {local $list_data 
            {$ui_list get_data_in_column token }}
         {switch $list_data 
            (overshell_easy 
               {$this update_vocal_freestyle_icon kDifficultyEasy })
            (overshell_medium 
               {$this update_vocal_freestyle_icon kDifficultyMedium })
            (overshell_hard 
               {$this update_vocal_freestyle_icon kDifficultyHard })
            (overshell_expert 
               {$this update_vocal_freestyle_icon kDifficultyExpert })
            (overshell_brutal 
               {$this update_vocal_freestyle_icon kDifficultyExpert })}}) 
   (SELECT_MSG 
      {local $list_data 
         {
            ($objId UIListCom)get_data_in_column token }} 
         {switch $list_data 
            (overshell_easy 
               {$this select_difficulty kDifficultyEasy })
            (overshell_medium 
               {$this select_difficulty kDifficultyMedium })
            (overshell_hard 
               {$this select_difficulty kDifficultyHard })
            (overshell_expert 
               {$this select_difficulty kDifficultyExpert })
            (overshell_brutal 
               {$this select_difficulty kDifficultyExpert })
            (overshell_guitar_solo 
               {$this select_difficulty kDifficultyEasy })} 
      {$this trigger_select_effects }
      {write_file "data:/GoldHEN/RB4DX/insong.dta" $dx_write_nul}
      ) 
   (list_focus 
      ($obj_name $obj_id) 
      {if 
         {== 
            {
               {$this get_user }get_track_type }kTrackVocals }
         {local $ui_list 
            {$this get_ui_list }}
         {local $list_data 
            {$ui_list get_data_in_column token }}
         {switch $list_data 
            (overshell_easy 
               {$this update_vocal_freestyle_icon kDifficultyEasy })
            (overshell_medium 
               {$this update_vocal_freestyle_icon kDifficultyMedium })
            (overshell_hard 
               {$this update_vocal_freestyle_icon kDifficultyHard })
            (overshell_expert 
               {$this update_vocal_freestyle_icon kDifficultyExpert })
            (overshell_brutal 
               {$this update_vocal_freestyle_icon kDifficultyExpert })}}) 
   (on_cancel 
      {$this leave_choose_difficulty }))

(kState_QuitEarlyConfirm 
   (view confirm_action) 
   (enter 
      {$this setup_confirm_actions confirm_quit 
         (overshell_confirm_yes overshell_confirm_no)overshell_confirm_no }) 
   (SELECT_MSG 
      {local $list_data 
         {
            ($objId UIListCom)get_data_in_column token }} 
      {switch $list_data 
         (overshell_confirm_yes 
            {file_delete "data:/GoldHEN/RB4DX/insong.dta"}
            {$this quit_early })
         (overshell_confirm_no 
            {if_else 
               {$this in_venue_meta_mode }
               {$this show_state kState_VenueMetaMenu }
               {$this show_in_song_menu }})} 
      {$this trigger_select_effects }) 
   (on_cancel 
      {if_else 
         {$this in_venue_meta_mode }
         {$this show_state kState_VenueMetaMenu }
         {$this show_in_song_menu }} 
      {$this trigger_cancel_effects }))

#define RB4DXMAIN_DATA
(
   {$this setup_confirm_actions a 
      (
         "Instrument Options"
         "Song Speed"
         "Gameplay Settings"
         "Visual Settings"
         "Controller Settings"
         "Optional Additions"
         "Screensaver"
      )
   }
)
(kState_RB4DXMain
   (view {$this get_auto_list_view }) 
   (enter
      RB4DXMAIN_DATA
   ) 
   (SELECT_MSG 
      {local $list_data 
         {
            ($objId UIListCom)get_data_in_column token }}  
      {switch $list_data 
         ("Instrument Options"
            {$this show_instrument_options}
            {$this trigger_select_effects })
         ("Song Speed"
            {$this show_state kState_RB4DXSongSpeed}
            {$this trigger_select_effects })
         ("Gameplay Settings"
            {$this show_state kState_RB4DXGPSettings}
            {$this trigger_select_effects}
         )
         ("Visual Settings"
            {$this show_state kState_RB4DXVisSettings}
            {$this trigger_select_effects}
         )
         ("Controller Settings"
            {$this show_state kState_RB4DXControllerSettings}
            {$this trigger_select_effects}
         )
         ("Optional Additions"
            {$this show_state kState_RB4DXOptionalAdditions}
            {$this trigger_select_effects}
         )
         ("writefile"
            {set $dx_write_test {array ()}}
            {push_back $dx_write_test {sprint $this}}
            {write_file "data:/GoldHEN/AFR/CUSA02084/ps4/dx/overshell/this.dta" $dx_write_test}
         )
         (colsel
            {$this show_state kState_RB4DXColorSelector}
            {$this trigger_select_effects })
         ("Screensaver"
            {$this show_state kState_RB4DXScreensaverWarn}
            {$this trigger_select_effects })
         ("lost menus"
            {$this show_state kState_RB4DXLostMenus}
            {$this trigger_select_effects })
      }
   ) 
   (on_cancel 
      {if_else 
         {$this in_song }
         {$this show_in_song_menu }
         {$this show_state kState_Options }}
      {$this trigger_cancel_effects }
   )
)
(kState_RB4DXSongSpeed
   (view confirm_action) 
   (enter 
      {$this setup_confirm_actions {sprintf "Song Speed: %.2f" {/ $speedmod 100}} ("+" "0" "-")}
   )
   (SELECT_MSG 
      {local $list_data 
         {
            ($objId UIListCom)get_data_in_column token }}  
      {switch $list_data 
         ("+"
            {set $speedmod {+ $speedmod 5}}
            {$this setup_confirm_actions {sprintf "Song Speed: %.2f" {/ $speedmod 100}} ("+" "0" "-")}
         )
         ("0"
            {set $speedmod 100}
            {$this setup_confirm_actions {sprintf "Song Speed: %.2f" {/ $speedmod 100}} ("+" "0" "-")}
         )
         ("-"
            {unless {< {- $speedmod 5} 100}
               {set $speedmod {- $speedmod 5}}
            }
            {$this setup_confirm_actions {sprintf "Song Speed: %.2f" {/ $speedmod 100}} ("+" "0" "-")}
         )

         })
   (on_cancel 
      {$this show_state kState_RB4DXMain}
      {$this trigger_cancel_effects })
)
#define RB4DXGP_DATA
(
   {$this setup_confirm_actions a 
      (
         {if_else $nomiss "No Miss Sounds: ON" "No Miss Sounds: OFF"}
         {if_else $nood "No OD: ON" "No OD: OFF"}
         {if_else $practiceod "OD in Practice: ON" "OD in Practice: OFF"}
         {if_else $nowhammyfx "Whammy FX: OFF" "Whammy FX: ON"}
         {switch $trackmuting
            (vanilla "Track Muting: Partial")
            (off "Track Muting: Off")
            (on "Track Muting: On")
         }
         {if_else $calibrationmode "Calibration Mode: ON" "Calibration Mode: OFF"}
      )
   }
)
(kState_RB4DXGPSettings
   (view {$this get_auto_list_view }) 
   (enter
      {set $dx_cur_state gp}
      RB4DXGP_DATA
   ) 
   (SELECT_MSG 
      {local $list_data 
         {
            ($objId UIListCom)get_data_in_column token }}  
      {switch $list_data 
         (("Track Muting: Partial" "Track Muting: Off" "Track Muting: On")
            {set $trackmuting
               {switch $trackmuting
                  (vanilla on)
                  (on off)
                  (off vanilla)
               }
            }
            {switch $trackmuting
               (vanilla 
                  {set_elem {find $syscfg beatmatcher audio mute_volume} 1 -16.0}
                  {file_delete "data:/GoldHEN/RB4DX/trackmutingoff.dta"}
                  {file_delete "data:/GoldHEN/RB4DX/trackmutingon.dta"}
               )
               (off 
                  {set_elem {find $syscfg beatmatcher audio mute_volume} 1 0.0}
                  {write_file "data:/GoldHEN/RB4DX/trackmutingoff.dta" $dx_write_nul}
                  {file_delete "data:/GoldHEN/RB4DX/trackmutingon.dta"}
               )
               (on 
                  {set_elem {find $syscfg beatmatcher audio mute_volume} 1 -96.0}
                  {write_file "data:/GoldHEN/RB4DX/trackmutingon.dta" $dx_write_nul}
                  {file_delete "data:/GoldHEN/RB4DX/trackmutingoff.dta"}
               )
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXGP_DATA
            }
            {$this trigger_select_effects }
         )
         (("No Miss Sounds: ON" "No Miss Sounds: OFF")
            {set $nomiss {! $nomiss}}
            {if_else $nomiss
               {do
                  {write_file "data:/GoldHEN/RB4DX/nomiss.dta" $dx_write_nul}
               }
               {file_delete "data:/GoldHEN/RB4DX/nomiss.dta"}
            }
            {$this show_state kState_RB4DXDelayedEffectWarn}
            {$this trigger_select_effects }
         )
         (("Whammy FX: OFF" "Whammy FX: ON")
            {set $nowhammyfx {! $nowhammyfx}}
            {if_else $nowhammyfx
               {do
                  {write_file "data:/GoldHEN/RB4DX/nowhammyfx.dta" $dx_write_nul}
                  {set_elem {find $syscfg beatmatcher watcher pitch_bend_range} 1 0}
               }
               {do
                  {file_delete "data:/GoldHEN/RB4DX/nowhammyfx.dta"}
                  {set_elem {find $syscfg beatmatcher watcher pitch_bend_range} 1 1}
               }
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXGP_DATA
            }
            {$this trigger_select_effects }
         )
         (("No OD: ON" "No OD: OFF")
            {set $nood {! $nood}}
            {if_else $nood
               {do
                  {write_file "data:/GoldHEN/RB4DX/nood.dta" $dx_write_nul}
                  {set_elem {find $syscfg gamemodes defaults allow_overdrive_phrases} 1 FALSE}
               }
               {do
                  {file_delete "data:/GoldHEN/RB4DX/nood.dta"}
                  {set_elem {find $syscfg gamemodes defaults allow_overdrive_phrases} 1 TRUE}
               }
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXGP_DATA
            }
            {$this trigger_select_effects }
         )
         (("OD in Practice: ON" "OD in Practice: OFF")
            {set $practiceod {! $practiceod}}
            {if_else $practiceod
               {do
                  {write_file "data:/GoldHEN/RB4DX/practiceod.dta" $dx_write_nul}
                  {set_elem {find $syscfg gamemodes practice allow_overdrive_phrases} 1 TRUE}
               }
               {do
                  {file_delete "data:/GoldHEN/RB4DX/practiceod.dta"}
                  {set_elem {find $syscfg gamemodes practice allow_overdrive_phrases} 1 FALSE}
               }
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXGP_DATA
            }
            {$this trigger_select_effects }
         )
         (("Calibration Mode: ON" "Calibration Mode: OFF")
            {set $calibrationmode {! $calibrationmode}}
            {if_else $calibrationmode
               {set_elem {find $syscfg beatmatcher watcher slop} 1 15}
               {set_elem {find $syscfg beatmatcher watcher slop} 1 100}
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXGP_DATA
            }
            {$this trigger_select_effects }
         )
      }
   ) 
   (on_cancel 
      {set $dx_cur_state FALSE}
      {$this show_state kState_RB4DXMain}
      {$this trigger_cancel_effects }
   )
)
#define RB4DXVIS_DATA
(
   {$this setup_confirm_actions a 
      (
         {if_else $blackbg "Black Venue: ON" "Black Venue: OFF"}
         {if_else $60fpsbg "60 FPS Venues: ON" "60 FPS Venues: OFF"}
         {if_else $crowdmeter "No Crowd Meter: ON" "No Crowd Meter: OFF"}
         {if_else $noui "No HUD: ON" "No HUD: OFF"}
      )
   }
)
(kState_RB4DXVisSettings
   (view {$this get_auto_list_view }) 
   (enter
      {set $dx_cur_state vis}
      RB4DXVIS_DATA
   ) 
   (SELECT_MSG 
      {local $list_data 
         {
            ($objId UIListCom)get_data_in_column token }}  
      {switch $list_data 
         (("Black Venue: ON" "Black Venue: OFF")
            {set $blackbg {! $blackbg}}
            {if_else $blackbg
               {write_file "data:/GoldHEN/RB4DX/blackbg.dta" $dx_write_nul}
               {file_delete "data:/GoldHEN/RB4DX/blackbg.dta"}
            }
            {$this show_state kState_RB4DXDelayedEffectWarn}
            {$this trigger_select_effects }
         )
         (("60 FPS Venues: ON" "60 FPS Venues: OFF")
            {set $60fpsbg {! $60fpsbg}}
            {if_else $60fpsbg
               {write_file "data:/GoldHEN/RB4DX/60fpsbg.dta" $dx_write_nul}
               {file_delete "data:/GoldHEN/RB4DX/60fpsbg.dta"}
            }
            {$this show_state kState_RB4DXDelayedEffectWarn}
            {$this trigger_select_effects }
         )
         (("No Crowd Meter: ON" "No Crowd Meter: OFF")
            {set $crowdmeter {! $crowdmeter}}
            {if_else $crowdmeter
               {do
                  {write_file "data:/GoldHEN/RB4DX/ps4/ui/game/crowd_meter.entity_ps4" $dx_write_nul}
                  {write_file "data:/GoldHEN/RB4DX/ps4/ui/game/join_band.entity_ps4" $dx_write_nul}
               }
               {do
                  {file_delete "data:/GoldHEN/RB4DX/ps4/ui/game/crowd_meter.entity_ps4"}
                  {file_delete "data:/GoldHEN/RB4DX/ps4/ui/game/join_band.entity_ps4"}
               }
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXVIS_DATA
            }
            {$this trigger_select_effects }
         )
         (("No HUD: ON" "No HUD: OFF")
            {set $noui {! $noui}}
            {if_else $noui
               {write_file "data:/GoldHEN/RB4DX/ps4/ui/game/hud.scene_ps4" $dx_write_nul}
               {file_delete "data:/GoldHEN/RB4DX/ps4/ui/game/hud.scene_ps4"}
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXVIS_DATA
            }
            {$this trigger_select_effects }
         )
      }
   ) 
   (on_cancel 
      {set $dx_cur_state FALSE}
      {$this show_state kState_RB4DXMain}
      {$this trigger_cancel_effects }
   )
)
(kState_RB4DXOptionalAdditions
   (view {$this get_auto_list_view }) 
   (enter
      {set $dx_cur_state optionaladd}
      OPTIONAL_ADDITIONS_CHECK
      {$this setup_confirm_actions a 
         (
            {if_else $nohud "Performance Mode: ON" "Performance Mode: OFF"}
            {if_else $songtitle "Song Title Always: ON" "Song Title Always: OFF"}
            {if_else $noshine "No Shine: ON" "No Shine: OFF"}
            {if_else $noflames "No Flames: ON" "No Flames: OFF"}
         )
      }
   ) 
   (SELECT_MSG 
      {local $list_data 
         {($objId UIListCom) get_data_in_column token}
      }  
      {switch $list_data 
         (("Performance Mode: ON" "Performance Mode: OFF")
            {if_else $nohud
               {do
                  {set $optionaladd nohud}
                  {$this show_state kState_RB4DXOptionalAddWarn}
               }
               {$this show_state kState_RB4DXOptionalAddHowTo}
            }
            {$this trigger_select_effects}
         )
         (("Song Title Always: ON" "Song Title Always: OFF")
            {if_else $songtitle
               {do
                  {set $optionaladd songtitle}
                  {$this show_state kState_RB4DXOptionalAddWarn}
               }
               {$this show_state kState_RB4DXOptionalAddHowTo}
            }
            {$this trigger_select_effects}
         )
         (("No Shine: ON" "No Shine: OFF")
            {if_else $noshine
               {do
                  {set $optionaladd noshine}
                  {$this show_state kState_RB4DXOptionalAddWarn}
               }
               {$this show_state kState_RB4DXOptionalAddHowTo}
            }
            {$this trigger_select_effects}
         )
         (("No Flames: ON" "No Flames: OFF")
            {if_else $noflames
               {do
                  {set $optionaladd noflames}
                  {$this show_state kState_RB4DXOptionalAddWarn}
               }
               {$this show_state kState_RB4DXOptionalAddHowTo}
            }
            {$this trigger_select_effects}
         )
      }
   ) 
   (on_cancel 
      {set $dx_cur_state FALSE}
      {$this show_state kState_RB4DXMain}
      {$this trigger_cancel_effects}
   )
)
#include dx_warn_states.dta
#include dx_controller_states.dta