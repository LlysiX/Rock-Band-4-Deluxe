#include dx_state_overrides.dta

#define RB4DXMAIN_DATA
(
   {if_else {$this in_song}
      {$this setup_confirm_actions a 
         (
            "Instrument Options"
            "Gameplay Settings"
            "SFX Settings"
            "Visual Settings"
            "Controller Settings"
            "Extras"
         )
      }
      {$this setup_confirm_actions a 
         (
            "Instrument Options"
            "Song Speed"
            "Gameplay Settings"
            "SFX Settings"
            "Visual Settings"
            "Controller Settings"
            "Extras"
         )
      }
   }
)
(kState_RB4DXMain
   (view {$this get_auto_list_view }) 
   (enter
      RB4DXMAIN_DATA
   ) 
   (SELECT_MSG 
      {local $list_data 
         {
            ($objId UIListCom)get_data_in_column token }}  
      {switch $list_data 
         ("Instrument Options"
            {$this show_instrument_options}
            {$this trigger_select_effects })
         ("Song Speed"
            {$this show_state kState_RB4DXSongSpeed}
            {$this trigger_select_effects })
         ("Gameplay Settings"
            {$this show_state kState_RB4DXGPSettings}
            {$this trigger_select_effects}
         )
         ("SFX Settings"
            {$this show_state kState_RB4DXSFXSettings}
            {$this trigger_select_effects}
         )
         ("Visual Settings"
            {$this show_state kState_RB4DXVisSettings}
            {$this trigger_select_effects}
         )
         ("Controller Settings"
            {$this show_state kState_RB4DXControllerSettings}
            {$this trigger_select_effects}
         )
         ("Extras"
            {$this show_state kState_RB4DXExtras}
            {$this trigger_select_effects}
         )
         ("writefile"
            {set $dx_write_test {array ()}}
            {push_back $dx_write_test {sprint $this}}
            {write_file "data:/GoldHEN/AFR/CUSA02084/ps4/dx/overshell/this.dta" $dx_write_test}
         )
         (colsel
            {$this show_state kState_RB4DXColorSelector}
            {$this trigger_select_effects })
         ("lost menus"
            {$this show_state kState_RB4DXLostMenus}
            {$this trigger_select_effects })
         ; ("test"
         ;    {$ui add_scene "ui/character/character_customize/character_customize_track_r2t.scene"})
      }
   ) 
   (on_cancel 
      {if_else 
         {$this in_song }
         {$this show_in_song_menu }
         {$this show_state kState_Options }}
      {$this trigger_cancel_effects }
   )
)

#define RB4DXGP_DATA
(
   {if_else {$this in_song}
      {$this setup_confirm_actions a 
         (
            {if_else $nood "Overdrive Gain: OFF" "Overdrive Gain: ON"}
            {if_else $practiceod "OD in Practice: ON" "OD in Practice: OFF"}
            {if_else $syncspeeds "Sync Difficulty Speeds: ON" "Sync Difficulty Speeds: OFF"}
            {if_else $calibrationmode "Calibration Mode: ON" "Calibration Mode: OFF"}
            {if_else $precisionmode "Precision Mode: ON" "Precision Mode: OFF"}
         )
      }
      {$this setup_confirm_actions a 
         (
            {if_else $autoplayexists {if_else $autoplayenabled "Autoplay: ON" "Autoplay: OFF"} "Autoplay: DISABLED"}
            {if_else $nood "Overdrive Gain: OFF" "Overdrive Gain: ON"}
            {if_else $practiceod "OD in Practice: ON" "OD in Practice: OFF"}
            {if_else $syncspeeds "Sync Difficulty Speeds: ON" "Sync Difficulty Speeds: OFF"}
            {if_else $calibrationmode "Calibration Mode: ON" "Calibration Mode: OFF"}
            {if_else $precisionmode "Precision Mode: ON" "Precision Mode: OFF"}
            {if_else $autoplayexists {if_else $drunkmode "Drunk Mode: ON" "Drunk Mode: OFF"} "Drunk Mode: DISABLED"}
         )
      }
   }
)
(kState_RB4DXGPSettings
   (view {$this get_auto_list_view }) 
   (enter
      {set $dx_cur_state gp}
      RB4DXGP_DATA
   ) 
   (SELECT_MSG 
      {local $list_data 
         {
            ($objId UIListCom)get_data_in_column token }}  
      {switch $list_data 
         ("Autoplay: DISABLED"
            {$this show_state kState_RB4DXAutoplayHowTo}
            {$this trigger_select_effects }
         )
         (("Autoplay: OFF" "Autoplay: ON")
            {set $autoplayenabled {! $autoplayenabled}}
            {if_else $autoplayenabled
               {do
                  {write_file "data:/GoldHEN/RB4DX/autoplay.ini" $dx_write_nul}
                  {$this show_state kState_RB4DXAutoplayOn}
               }
               {do
                  {file_delete "data:/GoldHEN/RB4DX/autoplay.ini"}
                  {$this show_state kState_RB4DXAutoplayOff}
               }
            }
            {$this trigger_select_effects }
         )
         (("Overdrive Gain: OFF" "Overdrive Gain: ON")
            {set $nood {! $nood}}
            {if_else $nood
               {do
                  {write_file "data:/GoldHEN/RB4DX/settings/gameplay/nood.dta" $dx_write_nul}
                  {set_elem {find $syscfg gamemodes defaults allow_overdrive_phrases} 1 FALSE}
               }
               {do
                  {file_delete "data:/GoldHEN/RB4DX/settings/gameplay/nood.dta"}
                  {set_elem {find $syscfg gamemodes defaults allow_overdrive_phrases} 1 TRUE}
               }
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXGP_DATA
            }
            {$this trigger_select_effects }
         )
         (("OD in Practice: ON" "OD in Practice: OFF")
            {set $practiceod {! $practiceod}}
            {if_else $practiceod
               {do
                  {write_file "data:/GoldHEN/RB4DX/settings/gameplay/practiceod.dta" $dx_write_nul}
                  {set_elem {find $syscfg gamemodes practice allow_overdrive_phrases} 1 TRUE}
               }
               {do
                  {file_delete "data:/GoldHEN/RB4DX/settings/gameplay/practiceod.dta"}
                  {set_elem {find $syscfg gamemodes practice allow_overdrive_phrases} 1 FALSE}
               }
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXGP_DATA
            }
            {$this trigger_select_effects }
         )
         (("Sync Difficulty Speeds: ON" "Sync Difficulty Speeds: OFF")
            {set $syncspeeds {! $syncspeeds}}
            SET_TRACK_SPEEDS
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXGP_DATA
            }
            {$this trigger_select_effects }
         )
         (("Calibration Mode: ON" "Calibration Mode: OFF")
            {set $calibrationmode {! $calibrationmode}}
            {if_else $calibrationmode
               {set_elem {find $syscfg beatmatcher watcher slop} 1 15}
               {set_elem {find $syscfg beatmatcher watcher slop} 1 100}
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXGP_DATA
            }
            {$this trigger_select_effects }
         )
         (("Precision Mode: ON" "Precision Mode: OFF")
            {set $precisionmode {! $precisionmode}}
            {if_else $precisionmode
               {set_elem {find $syscfg beatmatcher watcher slop} 1 50}
               {set_elem {find $syscfg beatmatcher watcher slop} 1 100}
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXGP_DATA
            }
            {$this trigger_select_effects }
         )
         ("Drunk Mode: DISABLED"
            {$this show_state kState_RB4DXDrunkModeHowTo}
            {$this trigger_select_effects }
         )
         (("Drunk Mode: ON" "Drunk Mode: OFF")
            {set $drunkmode {! $drunkmode}}
            {if_else $drunkmode
               {do
                  {set_elem {find $syscfg beatmatcher watcher slop} 1 750}
                  {write_file "data:/GoldHEN/RB4DX/drunkmode.ini" $dx_write_nul}
                  RB4DXGP_DATA
               }
               {do
                  {set_elem {find $syscfg beatmatcher watcher slop} 1 100}
                  {file_delete "data:/GoldHEN/RB4DX/drunkmode.ini"}
                  {$this show_state kState_RB4DXAutoplayOff}
               }
            }
            {$this trigger_select_effects }
         )
      }
   ) 
   (on_cancel 
      {set $dx_cur_state FALSE}
      {$this show_state kState_RB4DXMain}
      {$this trigger_cancel_effects }
   )
)

#define RB4DXSFX_DATA
(
   {$this setup_confirm_actions a 
      (
         {if_else $nomiss "Miss Sounds: OFF" "Miss Sounds: ON"}
         {if_else $nowhammyfx "Whammy FX: OFF" "Whammy FX: ON"}
         {switch $trackmuting
            (vanilla "Track Muting: Partial")
            (off "Track Muting: Off")
            (on "Track Muting: On")
         }
      )
   }
)
(kState_RB4DXSFXSettings
   (view {$this get_auto_list_view }) 
   (enter
      {set $dx_cur_state sfx}
      RB4DXSFX_DATA
   ) 
   (SELECT_MSG 
      {local $list_data 
         {
            ($objId UIListCom)get_data_in_column token }}  
      {switch $list_data 
         
         (("Track Muting: Partial" "Track Muting: Off" "Track Muting: On")
            {set $trackmuting
               {switch $trackmuting
                  (vanilla on)
                  (on off)
                  (off vanilla)
               }
            }
            {switch $trackmuting
               (vanilla 
                  {set_elem {find $syscfg beatmatcher audio mute_volume} 1 -16.0}
                  {file_delete "data:/GoldHEN/RB4DX/settings/sfx/trackmutingoff.dta"}
                  {file_delete "data:/GoldHEN/RB4DX/settings/sfx/trackmutingon.dta"}
               )
               (off 
                  {set_elem {find $syscfg beatmatcher audio mute_volume} 1 0.0}
                  {write_file "data:/GoldHEN/RB4DX/settings/sfx/trackmutingoff.dta" $dx_write_nul}
                  {file_delete "data:/GoldHEN/RB4DX/settings/sfx/trackmutingon.dta"}
               )
               (on 
                  {set_elem {find $syscfg beatmatcher audio mute_volume} 1 -96.0}
                  {write_file "data:/GoldHEN/RB4DX/settings/sfx/trackmutingon.dta" $dx_write_nul}
                  {file_delete "data:/GoldHEN/RB4DX/settings/sfx/trackmutingoff.dta"}
               )
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXVIS_DATA
            }
            {$this trigger_select_effects }
         )
         (("Miss Sounds: OFF" "Miss Sounds: ON")
            {set $nomiss {! $nomiss}}
            {if_else $nomiss
               {do
                  {write_file "data:/GoldHEN/RB4DX/settings/sfx/nomiss.dta" $dx_write_nul}
               }
               {file_delete "data:/GoldHEN/RB4DX/settings/sfx/nomiss.dta"}
            }
            {$this show_state kState_RB4DXDelayedEffectWarn}
            {$this trigger_select_effects }
         )
         (("Whammy FX: OFF" "Whammy FX: ON")
            {set $nowhammyfx {! $nowhammyfx}}
            {if_else $nowhammyfx
               {do
                  {write_file "data:/GoldHEN/RB4DX/settings/sfx/nowhammyfx.dta" $dx_write_nul}
                  {set_elem {find $syscfg beatmatcher watcher pitch_bend_range} 1 0}
               }
               {do
                  {file_delete "data:/GoldHEN/RB4DX/settings/sfx/nowhammyfx.dta"}
                  {set_elem {find $syscfg beatmatcher watcher pitch_bend_range} 1 1}
               }
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXVIS_DATA
            }
            {$this trigger_select_effects }
         )
      }
   ) 
   (on_cancel 
      {set $dx_cur_state FALSE}
      {$this show_state kState_RB4DXMain}
      {$this trigger_cancel_effects }
   )
)

#define RB4DXVIS_DATA
(
   {$this setup_confirm_actions a 
      (
         {if_else $blackbg "Black Venue: ON" "Black Venue: OFF"}
         {if_else $60fpsbg "60 FPS Venues: ON" "60 FPS Venues: OFF"}
         {if_else $crowdmeter "Crowd Meter: OFF" "Crowd Meter: ON"}
         {if_else $noui "HUD: OFF" "HUD: ON"}
         {if_else $noaa "Track Antialiasing: OFF" "Track Antialiasing: ON"}
         "Track Curvature"
      )
   }
)
(kState_RB4DXVisSettings
   (view {$this get_auto_list_view }) 
   (enter
      {set $crowdmeter {file_exists "data:/GoldHEN/RB4DX/ps4/ui/game/crowd_meter.entity_ps4"}}
      {set $noui {file_exists "data:/GoldHEN/RB4DX/ps4/ui/game/hud.scene_ps4"}}
      {set $noaa {file_exists "data:/GoldHEN/RB4DX/ps4/shared/scene/antialias.scene_ps4"}}
      {set $dx_cur_state vis}
      RB4DXVIS_DATA
   ) 
   (SELECT_MSG 
      {local $list_data 
         {
            ($objId UIListCom)get_data_in_column token }}  
      {switch $list_data 
         (("Black Venue: ON" "Black Venue: OFF")
            {set $blackbg {! $blackbg}}
            {if_else $blackbg
               {write_file "data:/GoldHEN/RB4DX/settings/visuals/blackbg.dta" $dx_write_nul}
               {file_delete "data:/GoldHEN/RB4DX/settings/visuals/blackbg.dta"}
            }
            {$this show_state kState_RB4DXDelayedEffectWarn}
            {$this trigger_select_effects }
         )
         (("60 FPS Venues: ON" "60 FPS Venues: OFF")
            {set $60fpsbg {! $60fpsbg}}
            {if_else $60fpsbg
               {write_file "data:/GoldHEN/RB4DX/settings/visuals/60fpsbg.dta" $dx_write_nul}
               {file_delete "data:/GoldHEN/RB4DX/settings/visuals/60fpsbg.dta"}
            }
            {$this show_state kState_RB4DXDelayedEffectWarn}
            {$this trigger_select_effects }
         )
         (("Crowd Meter: ON" "Crowd Meter: OFF")
            {set $crowdmeter {! $crowdmeter}}
            {if_else $crowdmeter
               {do
                  {write_file "data:/GoldHEN/RB4DX/ps4/ui/game/crowd_meter.entity_ps4" $dx_write_nul}
                  {write_file "data:/GoldHEN/RB4DX/ps4/ui/game/join_band.entity_ps4" $dx_write_nul}
               }
               {do
                  {file_delete "data:/GoldHEN/RB4DX/ps4/ui/game/crowd_meter.entity_ps4"}
                  {file_delete "data:/GoldHEN/RB4DX/ps4/ui/game/join_band.entity_ps4"}
               }
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXVIS_DATA
            }
            {$this trigger_select_effects }
         )
         (("HUD: ON" "HUD: OFF")
            {set $noui {! $noui}}
            {if_else $noui
               {write_file "data:/GoldHEN/RB4DX/ps4/ui/game/hud.scene_ps4" $dx_write_nul}
               {file_delete "data:/GoldHEN/RB4DX/ps4/ui/game/hud.scene_ps4"}
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXVIS_DATA
            }
            {$this trigger_select_effects }
         )
         (("Track Antialiasing: OFF" "Track Antialiasing: ON")
            {set $noaa {! $noaa}}
            {if_else $noaa
               {write_file "data:/GoldHEN/RB4DX/ps4/shared/scene/antialias.scene_ps4" $dx_write_nul}
               {file_delete "data:/GoldHEN/RB4DX/ps4/shared/scene/antialias.scene_ps4"}
            }
            {if_else {$this in_song}
               {$this show_state kState_RB4DXInGameWarn}
               RB4DXVIS_DATA
            }
            {$this trigger_select_effects }
         )
         ("Track Curvature"
            {$this show_state kState_RB4DXTrackCurve}
            {$this trigger_select_effects }
         )
      }
   ) 
   (on_cancel 
      {set $dx_cur_state FALSE}
      {$this show_state kState_RB4DXMain}
      {$this trigger_cancel_effects }
   )
)

#define RB4DXEXTRA_DATA
(
   {if_else {$this in_song}
      {$this setup_confirm_actions a 
         (
            "Optional Additions"
            {if_else $notifycolored "Plugin Notification Icon: Colored" "Plugin Notification Icon: B/W"}
         )
      }
      {$this setup_confirm_actions a 
         (
            "Optional Additions"
            "Screensaver"
            {if_else $notifycolored "Plugin Notification Icon: Colored" "Plugin Notification Icon: B/W"}
         )
      }
   }
)
(kState_RB4DXExtras
   (view {$this get_auto_list_view })
   (enter
      RB4DXEXTRA_DATA
   ) 
   (SELECT_MSG 
      {local $list_data 
         {($objId UIListCom) get_data_in_column token}
      }  
      {switch $list_data 
         ("Optional Additions"
            {$this show_state kState_RB4DXOptionalAdditions}
            {$this trigger_select_effects}
         )
         ("Screensaver"
            {$this show_state kState_RB4DXScreensaverWarn}
            {$this trigger_select_effects })
         (("Plugin Notification Icon: Colored" "Plugin Notification Icon: B/W")
            {set $notifycolored {! $notifycolored}}
            {if_else $notifycolored
               {write_file "data:/GoldHEN/RB4DX/notifycolored.ini" $dx_write_nul}
               {file_delete "data:/GoldHEN/RB4DX/notifycolored.ini"}
            }
            RB4DXEXTRA_DATA
            {$this trigger_select_effects }
         )
      }
   ) 
   (on_cancel 
      {$this show_state kState_RB4DXMain}
      {$this trigger_cancel_effects}
   )
)

(kState_RB4DXOptionalAdditions
   (view {$this get_auto_list_view }) 
   (enter
      {set $dx_cur_state optionaladd}
      OPTIONAL_ADDITIONS_CHECK
      {$this setup_confirm_actions a 
         (
            {if_else $nohud "Performance Mode: ON" "Performance Mode: OFF"}
            {if_else $songtitle "Song Title Always: ON" "Song Title Always: OFF"}
            {if_else $noshine "No Shine: ON" "No Shine: OFF"}
            {if_else $noflames "No Flames: ON" "No Flames: OFF"}
            {if_else $noui "Hide Mic Warning: ON" "Hide Mic Warning: OFF"}
            {if_else $menubg "No Menu BGs: ON" "No Menu BGs: OFF"}
         )
      }
   ) 
   (SELECT_MSG 
      {local $list_data 
         {($objId UIListCom) get_data_in_column token}
      }  
      {switch $list_data 
         (("Performance Mode: ON" "Performance Mode: OFF")
            {if_else $nohud
               {do
                  {set $optionaladd nohud}
                  {$this show_state kState_RB4DXOptionalAddWarn}
               }
               {$this show_state kState_RB4DXOptionalAddHowTo}
            }
            {$this trigger_select_effects}
         )
         (("Song Title Always: ON" "Song Title Always: OFF")
            {if_else $songtitle
               {do
                  {set $optionaladd songtitle}
                  {$this show_state kState_RB4DXOptionalAddWarn}
               }
               {$this show_state kState_RB4DXOptionalAddHowTo}
            }
            {$this trigger_select_effects}
         )
         (("No Shine: ON" "No Shine: OFF")
            {if_else $noshine
               {do
                  {set $optionaladd noshine}
                  {$this show_state kState_RB4DXOptionalAddWarn}
               }
               {$this show_state kState_RB4DXOptionalAddHowTo}
            }
            {$this trigger_select_effects}
         )
         (("No Flames: ON" "No Flames: OFF")
            {if_else $noflames
               {do
                  {set $optionaladd noflames}
                  {$this show_state kState_RB4DXOptionalAddWarn}
               }
               {$this show_state kState_RB4DXOptionalAddHowTo}
            }
            {$this trigger_select_effects}
         )
         (("Hide Mic Warning: ON" "Hide Mic Warning: OFF")
            {if_else $noui
               {do
                  {set $optionaladd noui}
                  {$this show_state kState_RB4DXOptionalAddWarn}
               }
               {$this show_state kState_RB4DXOptionalAddHowTo}
            }
            {$this trigger_select_effects}
         )
         (("No Menu BGs: ON" "No Menu BGs: OFF")
            {if_else $menubg 
               {do
                  {set $optionaladd menubg}
                  {$this show_state kState_RB4DXOptionalAddWarn}
               }
               {$this show_state kState_RB4DXOptionalAddHowTo}
            }
            {$this trigger_select_effects}
         )
      }
   ) 
   (on_cancel 
      {set $dx_cur_state FALSE}
      {$this show_state kState_RB4DXExtras}
      {$this trigger_cancel_effects}
   )
)

#include dx_slider_states.dta
#include dx_warn_states.dta
#include dx_controller_states.dta